{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/react-tree-selector/src/assets/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { dataInit, adjustChecked, countCheck } from './tree.jsx';\nimport './assets/tree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tree({\n  data\n}) {\n  _s();\n\n  // 树形选择组件\n  const [orgData, setData] = useState(dataInit([// Hook使得function组件有状态，第一次渲染时初始化数据\n  {\n    id: 0,\n    title: '浙江',\n    children: [{\n      id: 10,\n      title: '杭州',\n      children: [{\n        id: 100,\n        title: '上城区'\n      }, {\n        id: 101,\n        title: '下城区'\n      }, {\n        id: 102,\n        title: '江干区'\n      }, {\n        id: 103,\n        title: '拱墅区'\n      }, {\n        id: 104,\n        title: '西湖区'\n      }, {\n        id: 105,\n        title: '滨江区'\n      }, {\n        id: 106,\n        title: '萧山区'\n      }]\n    }, {\n      id: 11,\n      title: '宁波',\n      children: [{\n        id: 110,\n        title: '余姚市'\n      }, {\n        id: 111,\n        title: '慈溪市'\n      }, {\n        id: 112,\n        title: '奉化市'\n      }]\n    }]\n  }, {\n    id: 1,\n    title: '江苏',\n    children: [{\n      id: 20,\n      title: '南京'\n    }, {\n      id: 21,\n      title: '南通'\n    }, {\n      id: 22,\n      title: '无锡'\n    }, {\n      id: 23,\n      title: '扬州'\n    }, {\n      id: 24,\n      title: '苏州'\n    }, {\n      id: 25,\n      title: '连云港'\n    }]\n  }, {\n    id: 2,\n    title: '上海'\n  }], null)); // 根节点的父组件为空\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"tree\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `tree-item ${item.open}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `folder ${item.open}`,\n          onClick: () => {\n            // 是否点击下拉菜单打开子选项\n            if (item.open !== '') {\n              if (item.open == 'open') {\n                item.open = 'close';\n              } else {\n                item.open = 'open';\n              }\n\n              setData([...orgData]); // 重新渲染更新状态后的数据\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `checkbox ${item.onSelect}`,\n          onClick: () => {\n            // 是否选择当前选项\n            if (item.onSelect == '') {\n              item.onSelect = 'checked';\n            } else {\n              item.onSelect = '';\n            }\n\n            adjustChecked(item);\n            countCheck(item);\n            setData([...orgData]); // 重新渲染更新状态后的数据\n\n            console.log(orgData); // console.log(item) // 当前被选中的项 \n            // eg: {id: 20, title: \"南京\", open: \"\", parent: {…}, onSelect: \"checked\"}\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), item.children ? /*#__PURE__*/_jsxDEV(Tree, {\n        data: item.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this) : '']\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tree, \"88QGQ/se9vHJUna8pXWEUlNDZic=\");\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"sources":["/Users/jia/Desktop/react-tree-selector/src/assets/index.jsx"],"names":["dataInit","adjustChecked","countCheck","Tree","data","orgData","setData","useState","id","title","children","map","item","open","onSelect","console","log"],"mappings":"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","sourcesContent":["import { dataInit, adjustChecked, countCheck } from './tree.jsx'\nimport './assets/tree.css'\n\nexport function Tree({ data }) {  // 树形选择组件\n    const [orgData, setData] = useState(dataInit([   // Hook使得function组件有状态，第一次渲染时初始化数据\n        {\n            id: 0, title: '浙江', children: [\n                {\n                    id: 10, title: '杭州', children: [\n                        { id: 100, title: '上城区' },\n                        { id: 101, title: '下城区' },\n                        { id: 102, title: '江干区' },\n                        { id: 103, title: '拱墅区' },\n                        { id: 104, title: '西湖区' },\n                        { id: 105, title: '滨江区' },\n                        { id: 106, title: '萧山区' },\n\n                    ]\n                },\n                {\n                    id: 11, title: '宁波', children: [\n                        { id: 110, title: '余姚市' },\n                        { id: 111, title: '慈溪市' },\n                        { id: 112, title: '奉化市' },\n                    ]\n                }\n            ]\n        },\n        {\n            id: 1, title: '江苏', children: [\n                { id: 20, title: '南京' },\n                { id: 21, title: '南通' },\n                { id: 22, title: '无锡' },\n                { id: 23, title: '扬州' },\n                { id: 24, title: '苏州' },\n                { id: 25, title: '连云港' },\n            ]\n        },\n        { id: 2, title: '上海' }\n    ], null));  // 根节点的父组件为空\n\n\n    return (\n        <ul className='tree'>\n            {data.map(item => (\n                <li className={`tree-item ${item.open}`} key={item.id}>\n                    <div className='tree-title'>\n                        <div className={`folder ${item.open}`} onClick={() => {  // 是否点击下拉菜单打开子选项\n                            if (item.open !== '') {\n                                if (item.open == 'open') {\n                                    item.open = 'close';\n                                } else {\n                                    item.open = 'open';\n                                }\n                                setData([...orgData]);  // 重新渲染更新状态后的数据\n                            }\n                        }} />\n                        <div className={`checkbox ${item.onSelect}`} onClick={() => {  // 是否选择当前选项\n                            if (item.onSelect == '') {\n                                item.onSelect = 'checked';\n                            } else {\n                                item.onSelect = '';\n                            }\n                            adjustChecked(item);\n                            countCheck(item);\n                            setData([...orgData]); // 重新渲染更新状态后的数据\n                            console.log(orgData)\n                            // console.log(item) // 当前被选中的项 \n                            // eg: {id: 20, title: \"南京\", open: \"\", parent: {…}, onSelect: \"checked\"}\n                        }} />\n                        <div className='item'>{item.title}</div>\n                    </div>\n                    {item.children ? (\n                        <Tree data={item.children} />\n                    ) : ''}\n                </li>\n            ))}\n        </ul>\n    );\n}\nexport default Tree"]},"metadata":{},"sourceType":"module"}