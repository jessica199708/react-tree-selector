{"ast":null,"code":"var _jsxFileName = \"/Users/jia/Desktop/react-tree-jia/src/App.js\";\nimport React, { Component } from 'react';\nimport './assets/tree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (() => {\n  const data = [{\n    id: 0,\n    title: '河北',\n    open: 'opened',\n    checked: 'checked',\n    children: [{\n      id: 10,\n      title: '石家庄',\n      open: 'opened',\n      checked: 'checked'\n    }, {\n      id: 11,\n      title: '唐山',\n      open: 'closed',\n      checked: ''\n    }, {\n      id: 12,\n      title: '秦皇岛',\n      open: 'closed',\n      checked: ''\n    }, {\n      id: 13,\n      title: '邯郸',\n      open: 'closed',\n      checked: ''\n    }]\n  }, {\n    id: 1,\n    title: '北京',\n    open: 'closed',\n    checked: ''\n  }, {\n    id: 2,\n    title: '上海',\n    open: 'closed',\n    checked: 'checked'\n  }];\n\n  function dataInit(data) {\n    data.forEach(item => {\n      if (item.children && item.children.length > 0) {\n        // item has children\n        item.open = 'open';\n      }\n    });\n  }\n\n  dataInit(data);\n\n  const Tree = ({\n    data\n  }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"tree\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `tree-item ${item.open}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `folder ${item.open}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `checkbox ${item.checked}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), item.children ? /*#__PURE__*/_jsxDEV(Tree, {\n        data: item.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this) : '']\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Tree, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n});","map":{"version":3,"sources":["/Users/jia/Desktop/react-tree-jia/src/App.js"],"names":["React","Component","data","id","title","open","checked","children","dataInit","forEach","item","length","Tree","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './assets/tree.css'\n\nexport default () => {\n    const data = [\n        {\n            id: 0, title: '河北', open: 'opened', checked: 'checked', children: [\n                { id: 10, title: '石家庄', open: 'opened', checked: 'checked' },\n                { id: 11, title: '唐山', open: 'closed', checked: '' },\n                { id: 12, title: '秦皇岛', open: 'closed', checked: '' },\n                { id: 13, title: '邯郸', open: 'closed', checked: '' },\n            ]\n        },\n        { id: 1, title: '北京', open: 'closed', checked: '' },\n        { id: 2, title: '上海', open: 'closed', checked: 'checked' }\n    ]\n    function dataInit(data) {\n        data.forEach(item => {\n            if (item.children && item.children.length > 0) { // item has children\n                item.open='open'\n\n            }\n            \n        })\n    }\n    dataInit(data);\n\n\n    const Tree = ({ data }) => (\n        <ul className='tree'>\n            {data.map(item => (\n                <li className={`tree-item ${item.open}`} key={item.id}>\n                    <div className='tree-title'>\n                        <div className={`folder ${item.open}`} />\n                        <div className={`checkbox ${item.checked}`} />\n                        <div className='item'>{item.title}</div>\n                    </div>\n                    {item.children ? (\n                        <Tree data={item.children} />\n                    ) : ''}\n                </li>\n            ))}\n        </ul>\n\n    )\n    return <Tree data={data} />\n}"]},"metadata":{},"sourceType":"module"}